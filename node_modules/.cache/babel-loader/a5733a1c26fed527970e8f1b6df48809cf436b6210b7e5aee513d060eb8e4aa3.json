{"ast":null,"code":"var _jsxFileName = \"/Users/kaylamacmini/Documents/aura-of-lasagna/aura-of-lasagna-app/src/components/LasagnaRecipe/LasagnaRecipe.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport IngredientList from \"../ingredients/IngredientList/IngredientList\";\nimport InstructionsList from \"../instructions/InstructionsList/InstructionsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ingredients = [{\n  quantity: 3,\n  unit: \"\",\n  description: \"large carrots, chopped\"\n}, {\n  quantity: 1,\n  unit: \"\",\n  description: \"red bell pepper,chopped\"\n}, {\n  quantity: 1,\n  unit: \"\",\n  description: \"medium zucchini,chopped\"\n}, {\n  quantity: 1,\n  unit: \"\",\n  description: \"medium yellow onion, chopped\"\n}, {\n  quantity: 2,\n  unit: \"cloves\",\n  description: \"garlic, minced\"\n}, {\n  quantity: 6,\n  unit: \"oz\",\n  description: \"baby spinach\"\n}, {\n  quantity: 28,\n  unit: \"oz\",\n  description: \"Rao's tomato sauce\"\n}, {\n  quantity: 9,\n  unit: \"\",\n  description: \"lasagna noodles (recommend Barilla)\"\n}, {\n  quantity: 16,\n  unit: \"oz\",\n  description: \"ricotta cheese\"\n}, {\n  quantity: 8,\n  unit: \"oz\",\n  description: \"shredded mozarella cheese\"\n}];\nconst instructions = [\"Preheat the oven to 425 degrees Farenheit and put a large stock pot of salted water to boil. Add a few glugs of olive oil to the water.\", \"Heat ~2 tbsp olive oil in a large skillet over medium heat. Add chopped vegetables and 1/2 tsp salt. Cook, stirring every few minutes, until veggies are golden on the edges (~10 min).\", \"Add minced garlic and cook for ~1 minute, until fragrant.\", \"Add a few handfuls of spinach and cook until wilted. Repeat until all spinach is added.\", \"Transfer veggie mixture to a blender and pulse several times, until finely chopped but not pureed. Remove veggies and combine in a mixing bowl with ricotta. Stir until uniform.\", \"When the water comes to a boil, add the pasta and cook for 1 minute less than package directions. When done, drain the pasta and toss with EVOO to prevent sticking.\", \"\"];\nconst LasagnaRecipe = () => {\n  _s();\n  const [multiplier, setMultiplier] = useState(1);\n  function handleMultiplierButtonClick(m) {\n    setMultiplier(m);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"LasagnaRecipe\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vegetable Lasagna\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"So good it has an aura.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMultiplierButtonClick(1),\n      children: \"1x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMultiplierButtonClick(2),\n      children: \"2x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMultiplierButtonClick(3),\n      children: \"3x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IngredientList, {\n      ingredients: ingredients,\n      multiplier: multiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InstructionsList, {\n      steps: instructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LasagnaRecipe, \"bv4AEQsggiXhm5kco+xPlUJQhwA=\");\n_c = LasagnaRecipe;\nexport default LasagnaRecipe;\nvar _c;\n$RefreshReg$(_c, \"LasagnaRecipe\");","map":{"version":3,"names":["React","useState","IngredientList","InstructionsList","jsxDEV","_jsxDEV","ingredients","quantity","unit","description","instructions","LasagnaRecipe","_s","multiplier","setMultiplier","handleMultiplierButtonClick","m","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","steps","_c","$RefreshReg$"],"sources":["/Users/kaylamacmini/Documents/aura-of-lasagna/aura-of-lasagna-app/src/components/LasagnaRecipe/LasagnaRecipe.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport IngredientList from \"../ingredients/IngredientList/IngredientList\";\nimport { IngredientProps } from \"../ingredients/Ingredient/Ingredient\";\nimport InstructionsList from \"../instructions/InstructionsList/InstructionsList\";\n\ninterface LasagnaRecipeProps {}\n\nconst ingredients: IngredientProps[] = [\n  { quantity: 3, unit: \"\", description: \"large carrots, chopped\" },\n  { quantity: 1, unit: \"\", description: \"red bell pepper,chopped\" },\n  { quantity: 1, unit: \"\", description: \"medium zucchini,chopped\" },\n  { quantity: 1, unit: \"\", description: \"medium yellow onion, chopped\" },\n  { quantity: 2, unit: \"cloves\", description: \"garlic, minced\" },\n  { quantity: 6, unit: \"oz\", description: \"baby spinach\" },\n  { quantity: 28, unit: \"oz\", description: \"Rao's tomato sauce\" },\n  { quantity: 9, unit: \"\", description: \"lasagna noodles (recommend Barilla)\" },\n  { quantity: 16, unit: \"oz\", description: \"ricotta cheese\" },\n  { quantity: 8, unit: \"oz\", description: \"shredded mozarella cheese\" },\n];\n\nconst instructions: string[] = [\n  \"Preheat the oven to 425 degrees Farenheit and put a large stock pot of salted water to boil. Add a few glugs of olive oil to the water.\",\n  \"Heat ~2 tbsp olive oil in a large skillet over medium heat. Add chopped vegetables and 1/2 tsp salt. Cook, stirring every few minutes, until veggies are golden on the edges (~10 min).\",\n  \"Add minced garlic and cook for ~1 minute, until fragrant.\",\n  \"Add a few handfuls of spinach and cook until wilted. Repeat until all spinach is added.\",\n  \"Transfer veggie mixture to a blender and pulse several times, until finely chopped but not pureed. Remove veggies and combine in a mixing bowl with ricotta. Stir until uniform.\",\n  \"When the water comes to a boil, add the pasta and cook for 1 minute less than package directions. When done, drain the pasta and toss with EVOO to prevent sticking.\",\n  \"\",\n];\n\nconst LasagnaRecipe: FC<LasagnaRecipeProps> = () => {\n  const [multiplier, setMultiplier] = useState(1);\n\n  function handleMultiplierButtonClick(m: number) {\n    setMultiplier(m);\n  }\n\n  return (\n    <div data-testid=\"LasagnaRecipe\">\n      <h1>Vegetable Lasagna</h1>\n      <h2>So good it has an aura.</h2>\n      <h3>Ingredients</h3>\n      <button onClick={() => handleMultiplierButtonClick(1)}>1x</button>\n      <button onClick={() => handleMultiplierButtonClick(2)}>2x</button>\n      <button onClick={() => handleMultiplierButtonClick(3)}>3x</button>\n      <IngredientList\n        ingredients={ingredients}\n        multiplier={multiplier}\n      ></IngredientList>\n      <h3>Instructions</h3>\n      <InstructionsList steps={instructions}></InstructionsList>\n    </div>\n  );\n};\n\nexport default LasagnaRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}